% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_K0_R.R
\name{calibrate_K0_R}
\alias{calibrate_K0_R}
\alias{calibrate_K0_R_ra}
\title{Given measured wealth in survey, estimate/calibrate K0 (starting wealth). \code{calibrate_K0} for version
without risk aversion and  \code{calibrate_K0_ra} for the version with risk aversion}
\usage{
calibrate_K0_R(
  df,
  yvar = "salaire_tot",
  var_wealth_survey = "PATFISOM",
  estimation_year = 2009,
  r = 0.02
)

calibrate_K0_R_ra(
  df,
  yvar = "salaire_tot",
  var_wealth_survey = "PATFISOM",
  estimation_year = 2009,
  r = 0.02,
  gamma = 0.5
)
}
\arguments{
\item{df}{\link[data.table]{data.table} object}

\item{yvar}{Income vector}

\item{var_wealth_survey}{Measured wealth variable}

\item{estimation_year}{Year where wealth is measured in survey}

\item{r}{Exogeneous interest rate}

\item{gamma}{Risk-aversion coefficient that gives instantaneous utility function curvature}
}
\value{
List where first element (\code{K0}) is initial wealth
 and second element (\code{C0}) is life-cycle consumption
}
\description{
Given measured wealth in survey, estimate/calibrate K0 (starting wealth). \code{calibrate_K0} for version
without risk aversion and  \code{calibrate_K0_ra} for the version with risk aversion
}
\details{
Calibrate K0 and C0 such that (i) individual leaves no wealth when he/she dies
 (ii) wealth level is consistent with observed level in 2009 (iii) consumption
 is fixed at C0 level. This function is programmed with R and can be compared
 with the \code{C++} implementation (\link{calibrate_K0})
 \code{calibrate_K0} is designed for risk neutral agents, \code{calibrate_K0_ra}
  for risk adverse agents

In pure permanent income approach with no inheritance, consumption path
 is fixed at a level such that agent does not leave any inheritance. The
 relationship between \eqn{K(t)} and \eqn{K(t-1)} is given by \eqn{K_t = (1+r)(K_{t-1}+Y_t-C_0)}
 with \eqn{C_0 = \frac{K_0+\sum_{t=0}^{Ti-1} \beta^t Y_t}{\sum_{t=0}^{Ti-1} \beta^t}}. By
 inverse recursion, K(0) can be determined from K(t)
}
\seealso{
\link{calibrate_K0} for the alternative \code{C++} function,
 \link{simulate_wealth_structural}
 for the dynamics of capital accumulation
}
